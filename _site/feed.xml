<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-01-23T00:42:15+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">성장하는 개발자, 하멍 기록장</title><subtitle>꾸준히 성장하고싶은 개발자 하멍의 일기장</subtitle><author><name>Hyperidiot</name><email>tndvjd@gmail.com</email></author><entry><title type="html">Pop Cat meme 애플리케이션</title><link href="http://localhost:4000/pop-cat/" rel="alternate" type="text/html" title="Pop Cat meme 애플리케이션" /><published>2021-01-22T23:45:36+09:00</published><updated>2021-01-22T23:45:36+09:00</updated><id>http://localhost:4000/pop-cat</id><content type="html" xml:base="http://localhost:4000/pop-cat/">&lt;p&gt;요즘 뜨고있는 pop cat을 컨트롤할 수 있는 애플리케이션을 만들어봤다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/popcat.gif&quot; alt=&quot;popcat.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;그냥 귀여워서 만들었다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;코딩을 시작하면서 느낀 점이 있는데, 참 놀랍다. 만들고 싶다고 생각한 걸 눈에 보이는 아웃풋으로 변환할 수 있다니..
단순히 컴퓨터와 키보드만 있다면 내 아이디어를 실현시킬 수 있는 것이다.&lt;/p&gt;

&lt;p&gt;이번에는 이벤트 제어를 메인으로, 사용해본 적 없는 keydown 이벤트를 사용해봤다. 모바일 지원을 위해 touchstart / touchend 기능도 사용해봤으나 원활하게 작동하지는 않는 듯 하다. (뭐가 문제인지 모르겠음)&lt;/p&gt;

&lt;p&gt;역시 작은 요소라도 하나씩 만들어보는 게 기억에는 가장 잘 남지 않나 싶다.
앞으로 꾸준히 이런 작은 요소들을 만들어보면서 각 코어기능들을 조금 더 공부할 수 있도록 해보려 한다.&lt;/p&gt;</content><author><name>Hyperidiot</name><email>tndvjd@gmail.com</email></author><summary type="html">요즘 뜨고있는 pop cat을 컨트롤할 수 있는 애플리케이션을 만들어봤다.</summary></entry><entry><title type="html">var 사용을 지양해야하는 까닭</title><link href="http://localhost:4000/var-let-const-diff/" rel="alternate" type="text/html" title="var 사용을 지양해야하는 까닭" /><published>2021-01-20T00:00:00+09:00</published><updated>2021-01-20T00:00:00+09:00</updated><id>http://localhost:4000/var-let-const-diff</id><content type="html" xml:base="http://localhost:4000/var-let-const-diff/">&lt;p&gt;변수 선언을 위해 사용하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;는 사용을 피하는 게 좋다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;의 특징을 알아보자.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;var&quot;&gt;var&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;는 초기 자바스크립트에서 등장했으며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;,와 상이한 점이 몇가지 존재한다.
구형 코드에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;를 많이 볼 수 있는데, 이를 무턱대고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;으로 고치게 되면 코드가 엉망진창이 될 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;중복선언-가능&quot;&gt;중복선언 가능&lt;/h2&gt;

&lt;p&gt;우선 가장 큰 특징으로는 &lt;strong&gt;중복선언&lt;/strong&gt;이 가능하다는 것이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hyperidiot&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hyperidiot&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hamung&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hamung&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;분명 위에서 선언을 했음에도 불구하고 에러가 나오지 않는다.&lt;br /&gt;
이는 유연한 변수 선언에는 도움이 될 수도 있지만, 대부분의 경우 우리를 괴롭힐 것이다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ex)&lt;/em&gt; 코드가 길어졌을 때, 실수로 같은 이름의 변수를 선언하면 어마어마한 에러를 내뱉을 것이다. 하지만 디버깅에는 오랜 시간이 걸릴 것이다.&lt;/p&gt;

&lt;h2 id=&quot;블록-스코프의-부재&quot;&gt;블록 스코프의 부재&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;는 블록 스코프가 없다. 함수 스코프거나 전역 스코프이다.
블록을 기준으로 스코프가 생기지 않기 때문에, 블록 밖에서 접근이 가능하다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hello world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// hello world!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;가 if문 밖에서도 동작을 하는 것을 볼 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;var-호이스팅&quot;&gt;var 호이스팅&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Glossary/Hoisting&quot;&gt;호이스팅(Hoisting)&lt;/a&gt;이란 “끌어 올리기”라는 뜻이 있는데, 쉽게 풀어 말하면 &lt;strong&gt;변수를 선언하기전에 사용할 수 있다&lt;/strong&gt;라는 것이다.&lt;br /&gt; 코드를 보면 바로 이해할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 변수를 “끌어 올리는” 현상을 호이스팅이라고 부른다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;로 선언된 변수는 기본적으로 함수의 최상단으로 호이스팅된다.&lt;/p&gt;

&lt;p&gt;변수는 &lt;em&gt;선언&lt;/em&gt; &amp;gt; &lt;em&gt;초기화&lt;/em&gt; &amp;gt; &lt;em&gt;할당&lt;/em&gt; 순서로 생성되는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;로 선언된 변수는 선언과 초기화가 동시에 이루어진다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉, 할당은 호이스팅 되지 않는다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이해가 되는가? &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var phrase = &quot;Hello world!&quot;&lt;/code&gt;에서는 다음과 같은 일이 벌어진다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;변수 선언 + 초기화 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;변수 할당 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alert(text)&lt;/code&gt;의 값은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undefind&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;p&gt;위 코드는 아래 코드와 같은 코드처럼 동작한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 선언은 호이스팅되므로 함수의 최상단으로 &quot;끌어 올려진다.&quot;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// undefind, 값이 할당되지 않았음.&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;로 선언한 변수는 어디서든 참조 가능하지만, 실제 할당이 이루어지는 코드 행까지는 그 값이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undefind&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;p&gt;이러한 점이 혼란을 야기할 때가 종종 있기 때문에, 변수를 선언할 때엔 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;를 주로 사용한다.&lt;/p&gt;

&lt;h1 id=&quot;요약&quot;&gt;요약&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;로 선언한 변수는 블록 스코프를 무시한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;는 선언과 초기화가 함수 시작지점에서 처리된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;그러니 이러한 특성을 마스터하고 자유자재로 다룰 수 있는 수준이 아니라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt; 사용을 지양하자.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Hyperidiot</name><email>tndvjd@gmail.com</email></author><summary type="html">변수 선언을 위해 사용하는 var는 사용을 피하는 게 좋다. var의 특징을 알아보자.</summary></entry><entry><title type="html">마크다운 사용법</title><link href="http://localhost:4000/markdown-basic/" rel="alternate" type="text/html" title="마크다운 사용법" /><published>2021-01-19T00:00:00+09:00</published><updated>2021-01-19T00:00:00+09:00</updated><id>http://localhost:4000/markdown-basic</id><content type="html" xml:base="http://localhost:4000/markdown-basic/">&lt;p&gt;본격적인 첫 포스팅을 위해서, 마크다운에 관해 앞서 설명하고자 한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;마크다운에-관하여&quot;&gt;마크다운에 관하여&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://whatismarkdown.com/&quot;&gt;마크다운&lt;/a&gt;이란 텍스트 기반의 마크업 언어로, 2004년 존 그루버에 의해 만들어졌다.
마크다운의 가장 큰 특징으로는 문법이 매우 간단하며, 읽기에 편하다는 점이다. 주로 위키류의 페이지가 마크다운 방식을 채용하고 있는데, 매우 직관적인 구조이기 때문에 컨텐츠의 작성 및 인식에 있어 유리한 점이 많다는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;을 사용하는 사람에게는 매우 친숙할 수 있는데, 깃헙의 레파지토리에 기본적인 정보를 표시해주는 README.md 파일이 바로 마크다운을 통해 작성된 문서이기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;마크다운의-장점&quot;&gt;마크다운의 장점&lt;/h2&gt;
&lt;p&gt;문법이 매우 단순하고, 누구나 쉽게 익힐 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;마크다운의-단점&quot;&gt;마크다운의 단점&lt;/h2&gt;
&lt;p&gt;모든 HTML 문법을 대체할 수는 없다.&lt;/p&gt;

&lt;h2 id=&quot;마크다운-문법&quot;&gt;마크다운 문법&lt;/h2&gt;
&lt;p&gt;글 작성을 위해 필요한 기본적인 문법을 알아보도록 하자. 본 게시글에서는 모든 마크다운 문법을 다루지는 않고 아주 기초적인 마크다운 문법만을 다루고 있다.
나도 깃헙을 통해 마크다운을 처음 알게 되었고, 이제 막 사용하기 시작했으므로 복습 겸 남기는 의미가 크기 때문에..&lt;/p&gt;

&lt;h3 id=&quot;1-제목-headers&quot;&gt;1. 제목 Headers&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; 으로 시작하는 텍스트. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt; ~ &amp;lt;h6&amp;gt;&lt;/code&gt;과 동일한 역할을 수행한다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;의 갯수가 많아질 수록 크기가 줄어든다. &lt;strong&gt;(중요도가 낮아진다)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p style=&quot;font-size: 36px&quot;&gt; This is Heading 1. &lt;/p&gt;
  &lt;p style=&quot;font-size: 32px&quot;&gt; This is Heading 2. &lt;/p&gt;
  &lt;p style=&quot;font-size: 28px&quot;&gt; This is Heading 3. &lt;/p&gt;
  &lt;p style=&quot;font-size: 24px&quot;&gt; This is Heading 4. &lt;/p&gt;
  &lt;p style=&quot;font-size: 20px&quot;&gt; This is Heading 5. &lt;/p&gt;
  &lt;p style=&quot;font-size: 16px&quot;&gt; This is Heading 6. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-강조-emphasis&quot;&gt;2. 강조 Emphasis&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;볼드체&lt;/strong&gt;를 사용하거나 &lt;em&gt;이탤릭체&lt;/em&gt;를 사용하여 강조를 표현할 수 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;볼드체는 **이렇게** 사용할 수 있다.&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;볼드체는 &lt;strong&gt;이렇게&lt;/strong&gt; 사용할 수 있다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;이탤릭체는 *이렇게* 사용할 수 있다.&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;이탤릭체는 &lt;em&gt;이렇게&lt;/em&gt; 사용할 수 있다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;진짜 중요할땐 ***이렇게*** 써보자&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;진짜 중요할땐 &lt;strong&gt;&lt;em&gt;이렇게&lt;/em&gt;&lt;/strong&gt; 써보자&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;3-인용-blockquotes&quot;&gt;3. 인용 Blockquotes&lt;/h3&gt;

&lt;p&gt;단순히 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 를 입력한 후 글을 쓰면 인용문이 된다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 인용문을 이렇게 만들 수 있다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;인용문을 이렇게 만들 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;4-코드-블럭-code-blocks&quot;&gt;4. 코드 블럭 Code Blocks&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~~~&lt;/code&gt; 블럭의 시작, 끝에 위 문자를 입력하여 물결표를 세개 입력하여 코드 블럭을 만들 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;코드 블럭은
이런 식으로
여러 줄로 쓸 수 있다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;코드 블럭의 타겟 언어를 지정해줄 수도 있다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is HTML&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;블럭의 시작 물결표 뒤에 프로그래밍 언어 명을 적음을 통해 syntax highlight 기능을
  사용할 수 있다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt; ex : ~~~html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-하이퍼링크-hyperlinks&quot;&gt;5. 하이퍼링크 Hyperlinks&lt;/h3&gt;

&lt;p&gt;문자에 하이퍼링크를 연결할 수 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[구글](https://google.com)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://google.com&quot;&gt;구글&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;6-이미지&quot;&gt;6. 이미지&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;![alt](/working_me.gif)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://smilecounter.com/images/item/8.gif&quot; alt=&quot;alt&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Hyperidiot</name><email>tndvjd@gmail.com</email></author><summary type="html">본격적인 첫 포스팅을 위해서, 마크다운에 관해 앞서 설명하고자 한다.</summary></entry><entry><title type="html">First Post</title><link href="http://localhost:4000/first-article/" rel="alternate" type="text/html" title="First Post" /><published>2021-01-18T16:21:36+09:00</published><updated>2021-01-18T16:21:36+09:00</updated><id>http://localhost:4000/first-article</id><content type="html" xml:base="http://localhost:4000/first-article/">&lt;p&gt;어제 한 5시간 내내 깃허브 블로그 구축을 위해 씨름을 했는데 드디어 &lt;strong&gt;성공&lt;/strong&gt;했으므로 자축&amp;amp;정상작동 확인용으로 첫 포스팅을 한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll&lt;/a&gt;은 정말 설명 잘 해줬는데 내 컴퓨터가 m1칩이라 그런진 몰라도 에러를 계속 뿜길래 정말 좌절할 뻔 했다..&lt;/p&gt;</content><author><name>Hyperidiot</name><email>tndvjd@gmail.com</email></author><summary type="html">어제 한 5시간 내내 깃허브 블로그 구축을 위해 씨름을 했는데 드디어 성공했으므로 자축&amp;amp;정상작동 확인용으로 첫 포스팅을 한다.</summary></entry></feed>